name: Check for firebase-tools releases

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"

jobs:
  check-releases:
    runs-on: ubuntu-latest
    outputs:
      # A semver comparison result - We are the base, firebase-tools is the compare-to
      comparison: ${{ steps.compare_versions.outputs.comparison-result }}
      firebase-actions-release: ${{ fromJSON(steps.get_our_release.outputs.data).tag_name }}
      firebase-tools-release: ${{ fromJSON(steps.get_their_release.outputs.data).tag_name }}
    steps:
      - name: Check our latest release
        uses: octokit/request-action@v2.x
        id: get_our_release
        with:
          route: GET /repos/w9jds/firebase-action/releases/latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check latest firebase-tools release
        uses: octokit/request-action@v2.x
        id: get_their_release
        with:
          route: GET /repos/firebase/firebase-tools/releases/latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: madhead/semver-utils@latest
        id: compare_versions
        with:
          # A version to work with
          version: "${{ fromJSON(steps.get_our_release.outputs.data).tag_name }}"
          # A version to compare against
          compare-to: "${{ fromJSON(steps.get_their_release.outputs.data).tag_name }}"

      - name: Print our release version
        run: echo "Our latest release is ${{ fromJSON(steps.get_our_release.outputs.data).tag_name }}"
      - name: Print their release version
        run: echo "Their latest release is ${{ fromJSON(steps.get_their_release.outputs.data).tag_name }}"
      - name: Print the result
        run: echo "${{ fromJSON(steps.get_our_release.outputs.data).tag_name }} ${{ steps.compare_versions.outputs.comparison-result }} ${{ fromJSON(steps.get_their_release.outputs.data).tag_name }}"

  bump-version:
    needs: check-releases
    permissions:
      contents: write
    runs-on: ubuntu-latest
    if: ${{ needs.check-releases.outputs.comparison == '<' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Bump version
        env:
          OLD_VERSION: "${{ needs.check-releases.outputs.firebase-actions-release }}"
          NEW_VERSION: "${{ needs.check-releases.outputs.firebase-tools-release }}"
        run: |
          OLD_VERSION=${OLD_VERSION#v} \
            NEW_VERSION=${NEW_VERSION#v}\
            sed -i "s|${OLD_VERSION}|${NEW_VERSION}|g" Dockerfile \
            sed -i "s|${OLD_VERSION}|${NEW_VERSION}|g" action.yaml \

      - name: print file contents for debug
        run: |
          cat Dockerfile
          cat action.yaml

      - name: Commit and push
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          tagging_message: "${{ needs.check-releases.outputs.firebase-tools-release }}"
          commit_message: "Bump version to ${{ needs.check-releases.outputs.firebase-tools-release }}"
